plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.google.gms.google.services)
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'

}

android {
    namespace 'com.example.licentaagain'
    compileSdk 35

    defaultConfig {
        applicationId "com.example.licentaagain"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    implementation libs.firebase.auth
    implementation libs.firebase.firestore
    implementation libs.credentials
    implementation libs.credentials.play.services.auth
    implementation libs.googleid
    implementation libs.firebase.storage
    implementation libs.firebase.messaging
    implementation libs.firebase.functions
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
    implementation(libs.firebase.bom)

    implementation libs.glide
    annotationProcessor libs.compiler


    implementation libs.material
    implementation libs.play.services.maps.v1910

    implementation(libs.credentials)
    implementation(libs.credentials.play.services.auth)
    implementation(libs.googleid)

    implementation libs.play.services.auth
    implementation(libs.gms.play.services.maps)
    implementation libs.play.services.location
    implementation libs.dexter
    implementation libs.places


    implementation libs.fragment

    implementation libs.okhttp
    implementation libs.json

    implementation(libs.generativeai)
    implementation(libs.guava)
    implementation(libs.reactive.streams)
}

secrets {
    // To add your Maps API key to this project:
    // 1. If the secrets.properties file does not exist, create it in the same folder as the local.properties file.
    // 2. Add this line, where YOUR_API_KEY is your API key:
    //        MAPS_API_KEY=YOUR_API_KEY
    propertiesFileName = "secrets.properties"

    // A properties file containing default secret values. This file can be
    // checked in version control.
    defaultPropertiesFileName = "local.defaults.properties"
}
